{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\khush\\\\bedtimestory\\\\screens\\\\LoginScreen.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport firebase from 'firebase';\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginScreen).call(this));\n\n    _this.login = function _callee(email, password) {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(email && password)) {\n                _context.next = 21;\n                break;\n              }\n\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password));\n\n            case 4:\n              response = _context.sent;\n\n              if (response) {\n                _this.props.navigation.navigate(\"WriteStoryScreen\");\n\n                console.log(\"ok\");\n              }\n\n              _context.next = 19;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              _context.t1 = _context.t0.code;\n              _context.next = _context.t1 === 'auth/user-not-found' ? 13 : _context.t1 === 'auth/invalid-email' ? 16 : 19;\n              break;\n\n            case 13:\n              Alert.alert(\"The user does not exist\");\n\n              _this.setState({\n                emailId: \"\",\n                password: \"\"\n              });\n\n              return _context.abrupt(\"break\", 19);\n\n            case 16:\n              Alert.alert(\"Incorrect email or password\");\n\n              _this.setState({\n                emailId: \"\",\n                password: \"\"\n              });\n\n              return _context.abrupt(\"break\", 19);\n\n            case 19:\n              _context.next = 22;\n              break;\n\n            case 21:\n              Alert.alert(\"Enter email and password\");\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 8]]);\n    };\n\n    _this.state = {\n      emailId: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(KeyboardAvoidingView, {\n        style: {\n          alignItems: 'center',\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/read.png\"),\n        style: {\n          height: 200,\n          width: 200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        }\n      }), React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          fontSize: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        }\n      }, \"Bedtime Stories\")), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        }\n      }, React.createElement(TextInput, {\n        style: styles.loginBox,\n        placeholder: \"Enter Email\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            emailId: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        }\n      }), React.createElement(TextInput, {\n        style: styles.loginBox,\n        placeholder: \"Enter Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            password: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          height: 30,\n          width: 90,\n          borderWidth: 1,\n          marginTop: 20,\n          paddingTop: 5,\n          borderRadius: 7\n        },\n        onPress: function onPress() {\n          _this2.login(_this2.state.emailId, _this2.state.password);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        }\n      }, \"Login\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  loginBox: {\n    width: 300,\n    height: 40,\n    borderWidth: 1.5,\n    fontSize: 20,\n    margin: 10,\n    paddingLeft: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/khush/bedtimestory/screens/LoginScreen.js"],"names":["React","firebase","LoginScreen","login","email","password","auth","signInWithEmailAndPassword","response","props","navigation","navigate","console","log","code","Alert","alert","setState","emailId","state","alignItems","marginTop","require","height","width","textAlign","fontSize","styles","loginBox","text","borderWidth","paddingTop","borderRadius","Component","StyleSheet","create","margin","paddingLeft"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {View,Text,StyleSheet,Image,TextInput,TouchableOpacity,Alert,KeyboardAvoidingView} from 'react-native';\r\nimport firebase from 'firebase';\r\n\r\nexport default class LoginScreen extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            emailId:\"\",\r\n            password:\"\",\r\n        }\r\n    }\r\n    login=async(email,password)=>{\r\n        if (email && password){\r\n            try{\r\n                const response=await firebase.auth().signInWithEmailAndPassword(email,password)\r\n                if(response){\r\n                    this.props.navigation.navigate(\"WriteStoryScreen\")\r\n                    console.log(\"ok\");\r\n                }\r\n            }\r\n            catch(error){\r\n                switch(error.code){\r\n                case 'auth/user-not-found':\r\n                    Alert.alert(\"The user does not exist\")\r\n                    this.setState({\r\n                        emailId:\"\",\r\n                        password:\"\"\r\n                    })\r\n                    break\r\n                case 'auth/invalid-email':\r\n                    Alert.alert(\"Incorrect email or password\")\r\n                    this.setState({\r\n                        emailId:\"\",\r\n                        password:\"\"\r\n                    })\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            Alert.alert(\"Enter email and password\")\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <KeyboardAvoidingView style={{alignItems:'center',marginTop:20}}>\r\n            <View>\r\n                <Image\r\n                source={require(\"../assets/read.png\")}\r\n                style={{height:200,width:200}}/>\r\n                <Text style={{textAlign: 'center', fontSize: 30}}>Bedtime Stories</Text>\r\n            </View>\r\n            <View>\r\n                <TextInput\r\n                style={styles.loginBox}\r\n                placeholder=\"Enter Email\"\r\n                onChangeText={(text)=>{\r\n                    this.setState({\r\n                      emailId: text\r\n                    })\r\n                  }}\r\n                />\r\n\r\n                <TextInput\r\n                style={styles.loginBox}\r\n                placeholder=\"Enter Password\"\r\n                secureTextEntry={true}\r\n                onChangeText={(text)=>{\r\n                    this.setState({\r\n                      password: text\r\n                    })\r\n                  }}\r\n                />\r\n            </View>\r\n\r\n            <View>\r\n            <TouchableOpacity style={{height:30,width:90,borderWidth:1,marginTop:20,paddingTop:5,borderRadius:7}}\r\n            onPress={()=>{\r\n                this.login(this.state.emailId, this.state.password)\r\n              }}\r\n            >\r\n              <Text style={{textAlign:'center'}}>Login</Text>\r\n            </TouchableOpacity>\r\n            </View>\r\n            </KeyboardAvoidingView>\r\n        )\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    loginBox:\r\n    {\r\n    width: 300,\r\n    height: 40,\r\n    borderWidth: 1.5,\r\n    fontSize: 20,\r\n    margin:10,\r\n    paddingLeft:10\r\n    }\r\n  })"]},"metadata":{},"sourceType":"module"}