{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\khush\\\\bedtimestory\\\\screens\\\\ReadStoryScreen.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SearchBar } from 'react-native-elements';\nimport { Header } from 'react-native-elements';\nimport db from \"../config\";\n\nvar ReadStoryScreen = function (_React$Component) {\n  _inherits(ReadStoryScreen, _React$Component);\n\n  function ReadStoryScreen() {\n    var _this;\n\n    _classCallCheck(this, ReadStoryScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReadStoryScreen).call(this));\n\n    _this.updateSearch = function (search) {\n      _this.setState({\n        search: search\n      });\n    };\n\n    _this.retrieveStories = function () {\n      try {\n        var allStories = [];\n        var stories = db.collection(\"stories\").get().then(function (querySnapshot) {\n          querySnapshot.forEach(function (doc) {\n            allStories.push(doc.data());\n            console.log('this are the stories', allStories);\n          });\n\n          _this.setState({\n            allStories: allStories\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    _this.state = {\n      allStories: [],\n      dataSource: [],\n      search: ''\n    };\n    return _this;\n  }\n\n  _createClass(ReadStoryScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.retrieveStories();\n    }\n  }, {\n    key: \"SearchFilterFunction\",\n    value: function SearchFilterFunction(text) {\n      var newData = this.state.allStories.filter(function (item) {\n        var itemData = item.title ? item.title.toUpperCase() : ''.toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      this.setState({\n        dataSource: newData,\n        search: text\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        }\n      }, React.createElement(Header, {\n        backgroundColor: 'pink',\n        centerComponent: {\n          text: 'Bed Time Stories',\n          style: {\n            color: 'white',\n            fontSize: 20\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        }\n      }), React.createElement(View, {\n        styles: {\n          height: 20,\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        }\n      }, React.createElement(SearchBar, {\n        placeholder: \"Type Here...\",\n        onChangeText: function onChangeText(text) {\n          return _this2.SearchFilterFunction(text);\n        },\n        onClear: function onClear(text) {\n          return _this2.SearchFilterFunction('');\n        },\n        value: this.state.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        }\n      })), React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        }\n      }, this.state.search === \"\" ? this.state.allStories.map(function (item) {\n        return React.createElement(View, {\n          style: {\n            borderColor: 'pink',\n            borderWidth: 2,\n            padding: 10,\n            alignItems: 'center',\n            margin: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          }\n        }, \"Title : \", item.title), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          }\n        }, \"Author : \", item.author));\n      }) : this.state.dataSource.map(function (item) {\n        return React.createElement(View, {\n          style: {\n            borderColor: 'pink',\n            borderWidth: 2,\n            padding: 10,\n            alignItems: 'center',\n            margin: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          }\n        }, \"Title : \", item.title), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          }\n        }, \"Author : \", item.author));\n      }))));\n    }\n  }]);\n\n  return ReadStoryScreen;\n}(React.Component);\n\nexport { ReadStoryScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff'\n  },\n  item: {\n    backgroundColor: 'pink',\n    padding: 10,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: 32\n  },\n  itemContainer: {\n    height: 80,\n    width: '100%',\n    borderWidth: 2,\n    borderColor: 'pink',\n    justifyContent: 'center',\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/khush/bedtimestory/screens/ReadStoryScreen.js"],"names":["React","SearchBar","Header","db","ReadStoryScreen","updateSearch","search","setState","retrieveStories","allStories","stories","collection","get","then","querySnapshot","forEach","doc","push","data","console","log","error","state","dataSource","text","newData","filter","item","itemData","title","toUpperCase","textData","indexOf","styles","container","style","color","fontSize","height","width","SearchFilterFunction","map","borderColor","borderWidth","padding","alignItems","margin","author","Component","StyleSheet","create","backgroundColor","marginVertical","marginHorizontal","itemContainer","justifyContent","alignSelf"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View ,FlatList,ScrollView} from 'react-native';\r\nimport {SearchBar} from 'react-native-elements';\r\nimport {Header} from 'react-native-elements';\r\nimport db from '../config'\r\n\r\n\r\n\r\n\r\nexport default class ReadStoryScreen extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state ={\r\n      allStories:[],\r\n      dataSource:[],\r\n      search : ''\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.retrieveStories()\r\n  }\r\n\r\n  updateSearch = search => {\r\n    this.setState({ search });\r\n  };\r\n\r\n\r\n  retrieveStories=()=>{\r\n    try {\r\n      var allStories= []\r\n      var stories = db.collection(\"stories\")\r\n        .get().then((querySnapshot)=> {\r\n          querySnapshot.forEach((doc)=> {\r\n              // doc.data() is never undefined for query doc snapshots\r\n              \r\n              allStories.push(doc.data())\r\n              console.log('this are the stories',allStories)\r\n          })\r\n          this.setState({allStories})\r\n        })\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n  SearchFilterFunction(text) {\r\n    //passing the inserted text in textinput\r\n    const newData = this.state.allStories.filter((item)=> {\r\n      //applying filter for the inserted text in search bar\r\n      const itemData = item.title ? item.title.toUpperCase() : ''.toUpperCase();\r\n      const textData = text.toUpperCase();\r\n      return itemData.indexOf(textData) > -1;\r\n    });\r\n    this.setState({\r\n      //setting the filtered newData on datasource\r\n      //After setting the data it will automatically re-render the view\r\n      dataSource: newData,\r\n      search: text,\r\n    });\r\n  }\r\n\r\n    render(){\r\n      return(\r\n        <View style ={styles.container}>\r\n           <Header \r\n                backgroundColor = {'pink'}\r\n                centerComponent = {{\r\n                    text : 'Bed Time Stories',\r\n                    style : { color: 'white', fontSize: 20}\r\n                }}\r\n            />\r\n          <View styles ={{height:20,width:'100%'}}>\r\n              <SearchBar\r\n              placeholder=\"Type Here...\"\r\n              onChangeText={text => this.SearchFilterFunction(text)}\r\n              onClear={text => this.SearchFilterFunction('')}\r\n              value={this.state.search}\r\n            />\r\n          </View>\r\n          \r\n          <ScrollView>\r\n              <View>\r\n                {\r\n                  this.state.search === \"\" ? \r\n                    this.state.allStories.map((item)=>(\r\n                      <View style={{borderColor:'pink',borderWidth:2,padding:10,alignItems:'center',margin:30}}>\r\n                        <Text>\r\n                          Title : {item.title}\r\n                        </Text>\r\n                        <Text>\r\n                          Author : {item.author}\r\n                        </Text>\r\n                      </View>\r\n                    ))\r\n                  :\r\n                  this.state.dataSource.map((item)=>(\r\n                    <View style={{borderColor:'pink',borderWidth:2,padding:10,alignItems:'center',margin:30}}>\r\n                      <Text>\r\n                       Title : {item.title}\r\n                      </Text>\r\n                      <Text>\r\n                       Author : {item.author}\r\n                      </Text>\r\n                    </View>\r\n                  ))\r\n                }\r\n              </View>\r\n          </ScrollView> \r\n          \r\n          \r\n          \r\n        </View>  \r\n      );      \r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#fff',\r\n  },\r\n  item: {\r\n    backgroundColor: 'pink',\r\n    padding:10,\r\n    marginVertical: 8,\r\n    marginHorizontal: 16,\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n  },\r\n  itemContainer: {\r\n    height: 80,\r\n    width:'100%',\r\n    borderWidth: 2,\r\n    borderColor: 'pink',\r\n    justifyContent:'center',\r\n    alignSelf: 'center',\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}