{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\khush\\\\bedtimestory\\\\screens\\\\ReadStoryScreen.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SearchBar } from 'react-native-elements';\nimport { Header } from 'react-native-elements';\nimport db from \"../config\";\n\nvar ReadStoryScreen = function (_React$Component) {\n  _inherits(ReadStoryScreen, _React$Component);\n\n  function ReadStoryScreen() {\n    var _this;\n\n    _classCallCheck(this, ReadStoryScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReadStoryScreen).call(this));\n\n    _this.updateSearch = function (search) {\n      _this.setState({\n        search: search\n      });\n    };\n\n    _this.retrieveStories = function () {\n      var allStories = [];\n      var stories = db.collection(\"stories\").where('Title', '==', _this.state.search);\n\n      _this.setState({\n        allStories: allStories\n      });\n    };\n\n    _this.state = {\n      allStories: [],\n      dataSource: [],\n      search: ''\n    };\n    return _this;\n  }\n\n  _createClass(ReadStoryScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.retrieveStories();\n    }\n  }, {\n    key: \"SearchFilterFunction\",\n    value: function SearchFilterFunction(text) {\n      var newData = this.state.allStories.filter(function (item) {\n        var itemData = item.title ? item.title.toUpperCase() : ''.toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      this.setState({\n        dataSource: newData,\n        search: text\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        }\n      }, React.createElement(Header, {\n        backgroundColor: 'pink',\n        centerComponent: {\n          text: 'Bed Time Stories',\n          style: {\n            color: 'white',\n            fontSize: 20\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        }\n      }), React.createElement(View, {\n        styles: {\n          height: 20,\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        }\n      }, React.createElement(SearchBar, {\n        placeholder: \"Type Here...\",\n        onChangeText: function onChangeText(text) {\n          return _this2.SearchFilterFunction(text);\n        },\n        onClear: function onClear(text) {\n          return _this2.SearchFilterFunction('');\n        },\n        value: this.state.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        }\n      })), React.createElement(FlatList, {\n        data: this.state.search === \"\" ? this.state.allStories : this.state.dataSource,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            style: styles.itemContainer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            }\n          }, \"  Title: \", item.Title), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            }\n          }, \"  Author : \", item.Author));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        }\n      }));\n    }\n  }]);\n\n  return ReadStoryScreen;\n}(React.Component);\n\nexport { ReadStoryScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff'\n  },\n  item: {\n    backgroundColor: 'pink',\n    padding: 10,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: 32\n  },\n  itemContainer: {\n    height: 80,\n    width: '100%',\n    borderWidth: 2,\n    borderColor: 'pink',\n    justifyContent: 'center',\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/khush/bedtimestory/screens/ReadStoryScreen.js"],"names":["React","SearchBar","Header","db","ReadStoryScreen","updateSearch","search","setState","retrieveStories","allStories","stories","collection","where","state","dataSource","text","newData","filter","item","itemData","title","toUpperCase","textData","indexOf","styles","container","style","color","fontSize","height","width","SearchFilterFunction","itemContainer","Title","Author","index","toString","Component","StyleSheet","create","backgroundColor","padding","marginVertical","marginHorizontal","borderWidth","borderColor","justifyContent","alignSelf"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View ,FlatList,ScrollView} from 'react-native';\r\nimport {SearchBar} from 'react-native-elements';\r\nimport {Header} from 'react-native-elements';\r\nimport db from '../config'\r\n\r\nexport default class ReadStoryScreen extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state ={\r\n      allStories:[],\r\n      dataSource:[],\r\n      search : ''\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.retrieveStories()\r\n  }\r\n\r\n  updateSearch = search => {\r\n    this.setState({ search });\r\n  };\r\n\r\n\r\n  retrieveStories=()=>{\r\n    \r\n      var allStories= []\r\n      var stories = db.collection(\"stories\").where('Title','==',this.state.search)\r\n        \r\n          this.setState({allStories})\r\n        \r\n  };\r\n\r\n\r\n  SearchFilterFunction(text) {\r\n    const newData = this.state.allStories.filter((item)=> {\r\n      const itemData = item.title ? item.title.toUpperCase() : ''.toUpperCase();\r\n      const textData = text.toUpperCase();\r\n      return itemData.indexOf(textData) > -1;\r\n    });\r\n    this.setState({\r\n      dataSource: newData,\r\n      search: text,\r\n    });\r\n  }\r\n\r\n    render(){\r\n      return(\r\n        <View style ={styles.container}>\r\n           <Header \r\n                backgroundColor = {'pink'}\r\n                centerComponent = {{\r\n                    text : 'Bed Time Stories',\r\n                    style : { color: 'white', fontSize: 20}\r\n                }}\r\n            />\r\n          <View styles ={{height:20,width:'100%'}}>\r\n              <SearchBar\r\n              placeholder=\"Type Here...\"\r\n              onChangeText={text => this.SearchFilterFunction(text)}\r\n              onClear={text => this.SearchFilterFunction('')}\r\n              value={this.state.search}\r\n            />\r\n          </View>\r\n          \r\n          <FlatList\r\n                data={this.state.search === \"\" ?  this.state.allStories: this.state.dataSource}\r\n                renderItem={({ item }) => (\r\n                  <View style={styles.itemContainer}>\r\n                    <Text>  Title: {item.Title}</Text>\r\n                    <Text>  Author : {item.Author}</Text>\r\n                  </View>\r\n                )}\r\n                keyExtractor={(item, index) => index.toString()}\r\n                /> \r\n        </View>  \r\n      );      \r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#fff',\r\n  },\r\n  item: {\r\n    backgroundColor: 'pink',\r\n    padding:10,\r\n    marginVertical: 8,\r\n    marginHorizontal: 16,\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n  },\r\n  itemContainer: {\r\n    height: 80,\r\n    width:'100%',\r\n    borderWidth: 2,\r\n    borderColor: 'pink',\r\n    justifyContent:'center',\r\n    alignSelf: 'center',\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}