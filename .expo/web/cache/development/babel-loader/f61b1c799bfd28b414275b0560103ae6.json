{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\khush\\\\bedtimestory\\\\screens\\\\ReadStoryScreen.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport db from \"../config\";\n\nvar ReadStoryScreen = function (_React$Component) {\n  _inherits(ReadStoryScreen, _React$Component);\n\n  function ReadStoryScreen() {\n    var _this;\n\n    _classCallCheck(this, ReadStoryScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReadStoryScreen).call(this));\n\n    _this.retrieveStories = function () {\n      try {\n        var allStories = [];\n        var stories = db.collection(\"stories\").get().then(function (querySnapshot) {\n          querySnapshot.forEach(function (doc) {\n            allStories.push(doc.data());\n            console.log('this are the stories', allStories);\n          });\n\n          _this.setState({\n            allStories: allStories\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    _this.state = {\n      allStories: []\n    };\n    return _this;\n  }\n\n  _createClass(ReadStoryScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.retrieveStories();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.allStories,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            style: styles.itemContainer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            }\n          }, \"Title: \", item.Title), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            }\n          }, \"Author : \", item.Author));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        }\n      }));\n    }\n  }]);\n\n  return ReadStoryScreen;\n}(React.Component);\n\nexport { ReadStoryScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  item: {\n    backgroundColor: 'pink',\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: 32\n  },\n  itemContainer: {\n    height: 80,\n    width: '100%',\n    borderWidth: 2,\n    borderColor: 'pink',\n    justifyContent: 'center',\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/khush/bedtimestory/screens/ReadStoryScreen.js"],"names":["React","db","ReadStoryScreen","retrieveStories","allStories","stories","collection","get","then","querySnapshot","forEach","doc","push","data","console","log","setState","error","state","item","styles","itemContainer","Title","Author","index","toString","Component","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","padding","marginVertical","marginHorizontal","title","fontSize","height","width","borderWidth","borderColor","alignSelf"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,EAAP;;IAKqBC,e;;;AACnB,6BAAa;AAAA;;AAAA;;AACX;;AADW,UAUbC,eAVa,GAUG,YAAI;AAClB,UAAI;AACF,YAAIC,UAAU,GAAE,EAAhB;AACA,YAAIC,OAAO,GAAGJ,EAAE,CAACK,UAAH,CAAc,SAAd,EACXC,GADW,GACLC,IADK,CACA,UAACC,aAAD,EAAkB;AAC5BA,UAAAA,aAAa,CAACC,OAAd,CAAsB,UAACC,GAAD,EAAQ;AAG1BP,YAAAA,UAAU,CAACQ,IAAX,CAAgBD,GAAG,CAACE,IAAJ,EAAhB;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCX,UAAnC;AACH,WALD;;AAMA,gBAAKY,QAAL,CAAc;AAACZ,YAAAA,UAAU,EAAVA;AAAD,WAAd;AACD,SATW,CAAd;AAUD,OAZD,CAaA,OAAOa,KAAP,EAAc;AACZH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF,KA3BY;;AAEX,UAAKC,KAAL,GAAY;AACVd,MAAAA,UAAU,EAAC;AADD,KAAZ;AAFW;AAKZ;;;;wCACkB;AACjB,WAAKD,eAAL;AACD;;;6BAqBS;AACJ,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,oBAAC,QAAD;AACG,QAAA,IAAI,EAAE,KAAKe,KAAL,CAAWd,UADpB;AAEG,QAAA,UAAU,EAAE;AAAA,cAAGe,IAAH,QAAGA,IAAH;AAAA,iBACV,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAEC,MAAM,CAACC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAcF,IAAI,CAACG,KAAnB,CADF,EAEF,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAgBH,IAAI,CAACI,MAArB,CAFE,CADU;AAAA,SAFf;AAQG,QAAA,YAAY,EAAE,sBAACJ,IAAD,EAAOK,KAAP;AAAA,iBAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA,SARjB;AAAA;AAAA;AAAA;AAAA;AAAA,QADL,CADJ;AAcH;;;;EA7CwCzB,KAAK,CAAC0B,S;;SAA9BxB,e;AAgDrB,IAAMkB,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAM7Bd,EAAAA,IAAI,EAAE;AACNY,IAAAA,eAAe,EAAE,MADX;AAENG,IAAAA,OAAO,EAAE,EAFH;AAGNC,IAAAA,cAAc,EAAE,CAHV;AAINC,IAAAA,gBAAgB,EAAE;AAJZ,GANuB;AAY/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAZwB;AAe9BjB,EAAAA,aAAa,EAAE;AACdkB,IAAAA,MAAM,EAAE,EADM;AAEdC,IAAAA,KAAK,EAAC,MAFQ;AAGdC,IAAAA,WAAW,EAAE,CAHC;AAIdC,IAAAA,WAAW,EAAE,MAJC;AAKdT,IAAAA,cAAc,EAAE,QALF;AAMdU,IAAAA,SAAS,EAAE;AANG;AAfe,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View ,FlatList} from 'react-native';\r\nimport db from '../config'\r\n\r\n\r\n\r\n\r\nexport default class ReadStoryScreen extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state ={\r\n      allStories:[]\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.retrieveStories()\r\n  }\r\n\r\n  retrieveStories=()=>{\r\n    try {\r\n      var allStories= []\r\n      var stories = db.collection(\"stories\")\r\n        .get().then((querySnapshot)=> {\r\n          querySnapshot.forEach((doc)=> {\r\n              // doc.data() is never undefined for query doc snapshots\r\n              \r\n              allStories.push(doc.data())\r\n              console.log('this are the stories',allStories)\r\n          })\r\n          this.setState({allStories})\r\n        })\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n    render(){\r\n        return(\r\n            <View>\r\n                 <FlatList\r\n                    data={this.state.allStories}\r\n                    renderItem={({ item }) => (\r\n                      <View style={styles.itemContainer}>\r\n                        <Text>Title: {item.Title}</Text>\r\n                    <Text>Author : {item.Author}</Text>\r\n                      </View>\r\n                    )}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },item: {\r\n    backgroundColor: 'pink',\r\n    padding: 20,\r\n    marginVertical: 8,\r\n    marginHorizontal: 16,\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n  },\r\n   itemContainer: {\r\n    height: 80,\r\n    width:'100%',\r\n    borderWidth: 2,\r\n    borderColor: 'pink',\r\n    justifyContent: 'center',\r\n    alignSelf: 'center',\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}