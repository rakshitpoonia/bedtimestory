{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\khush\\\\bedtimestory\\\\screens\\\\ReadStoryScreen.js\";\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Header } from 'react-native-elements';\nimport { SearchBar } from 'react-native-elements';\nimport db from \"../config\";\n\nvar ReadScreen = function (_React$Component) {\n  _inherits(ReadScreen, _React$Component);\n\n  function ReadScreen() {\n    var _this;\n\n    _classCallCheck(this, ReadScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReadScreen).call(this));\n\n    _this.updateSearch = function (search) {\n      _this.setState({\n        search: search\n      });\n    };\n\n    _this.retrieveStories = function () {\n      var allStories = [];\n      var stories = db.collection(\"stories\").get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          allStories.push(doc.data());\n          console.log('this are the stories', allStories);\n        });\n\n        _this.setState({\n          allStories: allStories\n        });\n      });\n    };\n\n    _this.state = {\n      allStories: [],\n      dataSource: [],\n      search: ''\n    };\n    return _this;\n  }\n\n  _createClass(ReadScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.retrieveStories();\n    }\n  }, {\n    key: \"SearchFilterFunction\",\n    value: function SearchFilterFunction(text) {\n      var newData = this.state.allStories.filter(function (item) {\n        var itemData = item.title ? item.title.toUpperCase() : ''.toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      this.setState({\n        dataSource: newData,\n        search: text\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        }\n      }, React.createElement(Header, {\n        backgroundColor: 'pink',\n        centerComponent: {\n          text: 'Bedtime Stories',\n          style: {\n            color: '#fff',\n            fontSize: 30\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        }\n      }), React.createElement(SearchBar, {\n        placeholder: \"Type Here...\",\n        onChangeText: function onChangeText(text) {\n          return _this2.SearchFilterFunction(text);\n        },\n        onClear: function onClear(text) {\n          return _this2.SearchFilterFunction('');\n        },\n        value: this.state.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        }\n      }));\n    }\n  }]);\n\n  return ReadScreen;\n}(React.Component);\n\nexport { ReadScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Users/khush/bedtimestory/screens/ReadStoryScreen.js"],"names":["React","Header","SearchBar","db","ReadScreen","updateSearch","search","setState","retrieveStories","allStories","stories","collection","get","then","querySnapshot","forEach","doc","push","data","console","log","state","dataSource","text","newData","filter","item","itemData","title","toUpperCase","textData","indexOf","styles","container","style","color","fontSize","SearchFilterFunction","Component","StyleSheet","create","flex","backgroundColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Text, View, StyleSheet, TextInput} from 'react-native';\r\nimport { Header } from 'react-native-elements';\r\nimport {SearchBar} from 'react-native-elements';\r\nimport db from '../config'\r\n\r\n\r\nexport default class ReadScreen extends React.Component{\r\n  constructor(){\r\n    super();\r\n    this.state ={\r\n      allStories:[],\r\n      dataSource:[],\r\n      search : ''\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.retrieveStories()\r\n  }\r\n\r\n  updateSearch = search => {\r\n    this.setState({ search });\r\n  };\r\n  retrieveStories=()=>{\r\n      var allStories= []\r\n      var stories = db.collection(\"stories\")\r\n        .get().then((querySnapshot)=> {\r\n          querySnapshot.forEach((doc)=> {\r\n              allStories.push(doc.data())\r\n              console.log('this are the stories',allStories)\r\n          })\r\n          this.setState({allStories})\r\n        })\r\n  }\r\n  \r\n  SearchFilterFunction(text) {\r\n    const newData = this.state.allStories.filter((item)=> {\r\n      const itemData = item.title ? item.title.toUpperCase() : ''.toUpperCase();\r\n      const textData = text.toUpperCase();\r\n      return itemData.indexOf(textData) > -1;\r\n    });\r\n    this.setState({\r\n      dataSource: newData,\r\n      search: text,\r\n    });\r\n  }\r\n  render(){\r\n    return(\r\n      <View style={styles.container}>\r\n      <Header\r\n          backgroundColor={'pink'}\r\n          centerComponent={{\r\n            text: 'Bedtime Stories',\r\n            style: { color: '#fff', fontSize: 30 },\r\n          }}\r\n        />\r\n        <SearchBar\r\n              placeholder=\"Type Here...\"\r\n              onChangeText={text => this.SearchFilterFunction(text)}\r\n              onClear={text => this.SearchFilterFunction('')}\r\n              value={this.state.search}\r\n            />\r\n      </View>\r\n    )\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'white',\r\n    \r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}